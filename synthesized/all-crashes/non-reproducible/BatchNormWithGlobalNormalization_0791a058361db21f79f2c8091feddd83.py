# 2022-03-07 19:06:05.693680: W tensorflow/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libcudart.so.11.0'; dlerror: libcudart.so.11.0: cannot open shared object file: No such file or directory2022-03-07 19:06:05.693724: I tensorflow/stream_executor/cuda/cudart_stub.cc:29] Ignore above cudart dlerror if you do not have a GPU set up on your machine.2022-03-07 19:06:06.608791: W tensorflow/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libcuda.so.1'; dlerror: libcuda.so.1: cannot open shared object file: No such file or directory2022-03-07 19:06:06.608835: W tensorflow/stream_executor/cuda/cuda_driver.cc:269] failed call to cuInit: UNKNOWN ERROR (303)2022-03-07 19:06:06.608856: I tensorflow/stream_executor/cuda/cuda_diagnostics.cc:156] kernel driver does not appear to be running on this host (devel): /proc/driver/nvidia/version does not exist2022-03-07 19:06:06.609109: I tensorflow/core/platform/cpu_feature_guard.cc:151] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations:  AVX2 AVX512F FMATo enable them in other operations, rebuild TensorFlow with the appropriate compiler flags.2022-03-07 19:06:06.613079: W tensorflow/core/framework/op_kernel.cc:1722] OP_REQUIRES failed at op_kernel.cc:120 : UNIMPLEMENTED: Op BatchNormWithGlobalNormalization is not available in GraphDef version 987. It has been removed in version 9. Use tf.nn.batch_normalization().Traceback (most recent call last):  File "/media/ivysyn/tensorflow/synthesized/all-crashes/all/BatchNormWithGlobalNormalization_0791a058361db21f79f2c8091feddd83.py", line 12, in <module>    tf.raw_ops.BatchNormWithGlobalNormalization(t=t, m=m, v=v, beta=beta, gamma=gamma, variance_epsilon=variance_epsilon, scale_after_normalization=scale_after_normalization)  File "/home/neo/.local/lib/python3.9/site-packages/tensorflow/python/util/tf_export.py", line 400, in wrapper    return f(**kwargs)  File "/home/neo/.local/lib/python3.9/site-packages/tensorflow/python/ops/gen_nn_ops.py", line 493, in _batch_norm_with_global_normalization    _ops.raise_from_not_ok_status(e, name)  File "/home/neo/.local/lib/python3.9/site-packages/tensorflow/python/framework/ops.py", line 7186, in raise_from_not_ok_status    raise core._status_to_exception(e) from None  # pylint: disable=protected-accesstensorflow.python.framework.errors_impl.UnimplementedError: Op BatchNormWithGlobalNormalization is not available in GraphDef version 987. It has been removed in version 9. Use tf.nn.batch_normalization(). [Op:BatchNormWithGlobalNormalization]

# BatchNormOp

import tensorflow as tf

variance_epsilon = 0.001
scale_after_normalization = True
t = tf.constant(0, shape=[3,5,4,2], dtype=tf.float32)
m = tf.constant([], shape=[0], dtype=tf.float32)
v = tf.constant([0.317702532,0.948696], shape=[2], dtype=tf.float32)
beta = tf.constant([0.317702532,0.948696], shape=[2], dtype=tf.float32)
gamma = tf.constant([0.317702532,0.948696], shape=[2], dtype=tf.float32)
tf.raw_ops.BatchNormWithGlobalNormalization(t=t, m=m, v=v, beta=beta, gamma=gamma, variance_epsilon=variance_epsilon, scale_after_normalization=scale_after_normalization)