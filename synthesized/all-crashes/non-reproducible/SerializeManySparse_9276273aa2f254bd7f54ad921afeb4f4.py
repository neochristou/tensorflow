# 2022-03-07 19:09:22.665974: W tensorflow/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libcudart.so.11.0'; dlerror: libcudart.so.11.0: cannot open shared object file: No such file or directory2022-03-07 19:09:22.666019: I tensorflow/stream_executor/cuda/cudart_stub.cc:29] Ignore above cudart dlerror if you do not have a GPU set up on your machine.2022-03-07 19:09:23.586907: W tensorflow/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libcuda.so.1'; dlerror: libcuda.so.1: cannot open shared object file: No such file or directory2022-03-07 19:09:23.586970: W tensorflow/stream_executor/cuda/cuda_driver.cc:269] failed call to cuInit: UNKNOWN ERROR (303)2022-03-07 19:09:23.586991: I tensorflow/stream_executor/cuda/cuda_diagnostics.cc:156] kernel driver does not appear to be running on this host (devel): /proc/driver/nvidia/version does not exist2022-03-07 19:09:23.587283: I tensorflow/core/platform/cpu_feature_guard.cc:151] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations:  AVX2 AVX512F FMATo enable them in other operations, rebuild TensorFlow with the appropriate compiler flags.Traceback (most recent call last):  File "/media/ivysyn/tensorflow/synthesized/all-crashes/all/SerializeManySparse_9276273aa2f254bd7f54ad921afeb4f4.py", line 9, in <module>    tf.raw_ops.SerializeManySparse(sparse_indices=sparse_indices, sparse_values=sparse_values, sparse_shape=sparse_shape, out_type=out_type)  File "/home/neo/.local/lib/python3.9/site-packages/tensorflow/python/util/tf_export.py", line 400, in wrapper    return f(**kwargs)  File "/home/neo/.local/lib/python3.9/site-packages/tensorflow/python/ops/gen_sparse_ops.py", line 496, in serialize_many_sparse    _ops.raise_from_not_ok_status(e, name)  File "/home/neo/.local/lib/python3.9/site-packages/tensorflow/python/framework/ops.py", line 7186, in raise_from_not_ok_status    raise core._status_to_exception(e) from None  # pylint: disable=protected-accesstensorflow.python.framework.errors_impl.InvalidArgumentError: Input values should be a vector but received shape [] [Op:SerializeManySparse]

# SerializeManySparseOp

import tensorflow as tf

out_type = tf.variant
sparse_indices = tf.constant(0, shape=[3,2], dtype=tf.int64)
sparse_values = tf.constant(1879048192, shape=[], dtype=tf.int32)
sparse_shape = tf.constant([], shape=[0], dtype=tf.int64)
tf.raw_ops.SerializeManySparse(sparse_indices=sparse_indices, sparse_values=sparse_values, sparse_shape=sparse_shape, out_type=out_type)